// Thish file is generated by quicktype,
// check /tools/codegen for further information.
// DO NOT EDIT IT.

//  To parse this JSON data, first install
//
//      json.hpp  https://github.com/nlohmann/json
//
//  Then include this file, and then do
//
//     IntelRdtProperties.hpp data = nlohmann::json::parse(jsonString);
//
//  You can get std::wstring data back out using
//
//     std::wcout << wdump((nlohmann::json) Schema);

#pragma once

#include <optional>

#include <nlohmann/json.hpp>

#include "FilePath.hpp"
#include "MemBWSchemaClass.hpp"
#include "helper.hpp"

namespace ocppi
{
namespace runtime
{
namespace config
{
using nlohmann::json;

struct IntelRdtProperties {
        std::optional<FilePath> closID;
        std::optional<FilePath> l3CacheSchema;
        std::optional<MemBWSchemaClass> memBWSchema;
        std::optional<FilePath> enableCMT;
        std::optional<FilePath> enableMBM;
        std::optional<FilePath> enabled;
};
}
}
}
